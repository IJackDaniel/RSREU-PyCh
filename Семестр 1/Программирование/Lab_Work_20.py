# Подключение необходимых библиотек
from math import e
from time import perf_counter_ns


# Функция: гиперболический косинус
def f(x):
    f = (e**x + e**(-1*x))/2
    return f


# Ввод значения x
x = float(input("Введите значение x: "))
iterations = int(input("Ввод количества повторений вычислений для получения среднего значения времени выполнения: "))

# Метод прямого вычисления:
t0 = perf_counter_ns()
for i in range(iterations):
    y = f(x)
t1 = (perf_counter_ns() - t0)/iterations
print("Метод прямого вычисления:")
print(f"Значение функции f(x) равно {y}")
print(f"Время работы программы {t1} наносекунд\n")

# Метод разложения функции в ряд
t0 = perf_counter_ns()
for i in range(iterations):
    t = 1  # Член последовательности
    y = 1  # Значение функции
    q = 2  # Для рекуррентного подсчёта факториала
    eps = 1e-6  # Точность/Погрешность
    n = 1
    while abs(t) > eps and n < 1000:
        t *= (x*x) / (q * (q-1))
        y += t
        n += 1
        q = 2*n
t2 = (perf_counter_ns() - t0) / iterations
print("Метод разложения функции в ряд:")
print(f"Значение функции f(x) равно {y}")
print(f"Время работы программы {t2} наносекунд\n")

# Сравнение полученных данных
print("Анализ полученных результатов")
if t2 > t1:
    print(f"Метод прямого вычисления работает на {round((t2 / t1 - 1)*100, 4)} процентов быстрее")
elif t2 < t1:
    print(f"Метод разложения функции в ряд работает на {round((t1 / t2 - 1)*100, 4)} процентов быстрее")
else:
    print("Время работы обоих методов одинаково")
